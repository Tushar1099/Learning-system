package com.casestudy.taskservice.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.config.TaskManagementConfigUtils;
import org.springframework.stereotype.Service;

import com.casestudy.taskservice.dto.TaskDto;
import com.casestudy.taskservice.entity.Task;
import com.casestudy.taskservice.repo.TaskRepo;
import com.casestudy.taskservice.service.TaskService;

import lombok.AllArgsConstructor;

@Service
public class TaskServiceImpl implements TaskService{

	private TaskRepo taskRepo;
	
	@Autowired
	private ModelMapper modelMapper;
	
	@Override
	public TaskDto saveTaskDto(TaskDto taskDto) {
		Task task = modelMapper.map(taskDto, Task.class);
		Task savedTask = taskRepo.save(task);
		TaskDto savedTaskDto = modelMapper.map(savedTask, TaskDto.class);
		return savedTaskDto;
	}

	@Override
	public TaskDto getTaskById(Long taskId) {
		Optional<Task> getTaskById = taskRepo.findById(taskId);
		TaskDto taskDto = modelMapper.map(getTaskById, TaskDto.class);
		return taskDto;
	}

	@Override
	public List<TaskDto> getAllTasks() {
		List<Task> listTask = taskRepo.findAll();
		List<TaskDto> allTaskDto = new ArrayList();
		for (Task tasks : listTask) {
			allTaskDto.add(modelMapper.map(tasks, TaskDto.class));
		}
		return allTaskDto;
	}

	@Override
	public TaskDto updateTask(TaskDto taskDto) {
		Task taskExist = taskRepo.findById(taskDto.getTaskId()).get();
		taskExist.setCourseId(taskDto.getCourseId());
		taskExist.setTaskId(taskDto.getTaskId());
		taskExist.setMentorId(taskDto.getMentorId());
		taskExist.setStartdate(taskDto.getStartdate());
		taskExist.setEndDate(taskDto.getEndDate());
		taskExist.setHoursADay(taskDto.getHoursADay());
		return modelMapper.map(taskExist, TaskDto.class);
	}

	@Override
	public void deleteTask(Long taskId) {
		taskRepo.deleteById(taskId);		
	}

}
